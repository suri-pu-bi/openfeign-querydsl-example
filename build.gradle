plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.lucent'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// querydsl : QueryDSL JPA 라이브러리
	implementation('io.github.openfeign.querydsl:querydsl-jpa:5.3')
	annotationProcessor('io.github.openfeign.querydsl:querydsl-apt:5.3:jpa')
	annotationProcessor('jakarta.persistence:jakarta.persistence-api') // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor('jakarta.annotation:jakarta.annotation-api') // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응

}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 추가 설정
// IntelliJ 빌드 시 스캔하는 영역과 Gradle 빌드 시 QueryDSL 생성 파일 위치가 달라짐

// 자바 소스 파일 컴파일할 때, 컴파일러 옵션을 설정 : 어노테이션 프로세서가 생성한 Q클래스를 특정 디렉토리에 세팅
def querydslDir = 'src/main/generated'


// java source set 에 QueryDSL Q class 위치 추가
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(querydslDir)
}
